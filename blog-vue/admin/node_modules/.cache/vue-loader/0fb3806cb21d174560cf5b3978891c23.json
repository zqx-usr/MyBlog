{"remainingRequest":"B:\\GitCode\\MyBlog\\blog-vue\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!B:\\GitCode\\MyBlog\\blog-vue\\admin\\src\\views\\talk\\Talk.vue?vue&type=script&lang=js&","dependencies":[{"path":"B:\\GitCode\\MyBlog\\blog-vue\\admin\\src\\views\\talk\\Talk.vue","mtime":1678087978034},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678087962812},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1678087961674},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678087962812},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1678087976619}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgKiBhcyBpbWFnZUNvbnZlcnNpb24gZnJvbSAiaW1hZ2UtY29udmVyc2lvbiI7DQppbXBvcnQgRW1vamlMaXN0IGZyb20gIi4uLy4uL2Fzc2V0cy9qcy9lbW9qaSI7DQppbXBvcnQgRWRpdG9yIGZyb20gIi4uLy4uL2NvbXBvbmVudHMvRWRpdG9yLnZ1ZSI7DQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBFZGl0b3INCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLnRhbGtJZCkgew0KICAgICAgdGhpcy5heGlvcw0KICAgICAgICAuZ2V0KCIvYXBpL2FkbWluL3RhbGtzLyIgKyB0aGlzLiRyb3V0ZS5wYXJhbXMudGFsa0lkKQ0KICAgICAgICAudGhlbigoeyBkYXRhIH0pID0+IHsNCiAgICAgICAgICB0aGlzLnRhbGsgPSBkYXRhLmRhdGE7DQogICAgICAgICAgaWYgKGRhdGEuZGF0YS5pbWdMaXN0KSB7DQogICAgICAgICAgICBkYXRhLmRhdGEuaW1nTGlzdC5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICB0aGlzLnVwbG9hZExpc3QucHVzaCh7IHVybDogaXRlbSB9KTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgfQ0KICB9LA0KICBkYXRhOiBmdW5jdGlvbigpIHsNCiAgICByZXR1cm4gew0KICAgICAgZW1vamlMaXN0OiBFbW9qaUxpc3QsDQogICAgICB0YWxrOiB7DQogICAgICAgIGlkOiBudWxsLA0KICAgICAgICBjb250ZW50OiAiIiwNCiAgICAgICAgaXNUb3A6IDAsDQogICAgICAgIHN0YXR1czogMSwNCiAgICAgICAgaW1hZ2VzOiBudWxsDQogICAgICB9LA0KICAgICAgc3RhdHVzTGlzdDogWw0KICAgICAgICB7IHN0YXR1czogMSwgZGVzYzogIuWFrOW8gCIgfSwNCiAgICAgICAgeyBzdGF0dXM6IDIsIGRlc2M6ICLnp4Hlr4YiIH0NCiAgICAgIF0sDQogICAgICB1cGxvYWRMaXN0OiBbXQ0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBoYW5kbGVDb21tYW5kKGNvbW1hbmQpIHsNCiAgICAgIHRoaXMudGFsay5zdGF0dXMgPSBjb21tYW5kOw0KICAgIH0sDQogICAgYWRkRW1vamkoa2V5LCB2YWx1ZSkgew0KICAgICAgdGhpcy4kcmVmcy5lZGl0b3IuYWRkVGV4dCgNCiAgICAgICAgIjxpbWcgc3JjPSAnIiArDQogICAgICAgICAgdmFsdWUgKw0KICAgICAgICAgICInIHdpZHRoPScyNCdoZWlnaHQ9JzI0JyBhbHQ9IiArDQogICAgICAgICAga2V5ICsNCiAgICAgICAgICAiIHN0eWxlPSdtYXJnaW46IDAgMXB4O3ZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbScvPiINCiAgICAgICk7DQogICAgfSwNCiAgICBoYW5kbGVSZW1vdmUoZmlsZSkgew0KICAgICAgdGhpcy51cGxvYWRMaXN0LmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7DQogICAgICAgIGlmIChpdGVtLnVybCA9PSBmaWxlLnVybCkgew0KICAgICAgICAgIHRoaXMudXBsb2FkTGlzdC5zcGxpY2UoaW5kZXgsIDEpOw0KICAgICAgICB9DQogICAgICB9KTsNCiAgICB9LA0KICAgIHVwbG9hZChyZXNwb25zZSkgew0KICAgICAgdGhpcy51cGxvYWRMaXN0LnB1c2goeyB1cmw6IHJlc3BvbnNlLmRhdGEgfSk7DQogICAgfSwNCiAgICBiZWZvcmVVcGxvYWQoZmlsZSkgew0KICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gew0KICAgICAgICBpZiAoZmlsZS5zaXplIC8gMTAyNCA8IHRoaXMuY29uZmlnLlVQTE9BRF9TSVpFKSB7DQogICAgICAgICAgcmVzb2x2ZShmaWxlKTsNCiAgICAgICAgfQ0KICAgICAgICAvLyDljovnvKnliLAyMDBLQizov5nph4znmoQyMDDlsLHmmK/opoHljovnvKnnmoTlpKflsI8s5Y+v6Ieq5a6a5LmJDQogICAgICAgIGltYWdlQ29udmVyc2lvbg0KICAgICAgICAgIC5jb21wcmVzc0FjY3VyYXRlbHkoZmlsZSwgdGhpcy5jb25maWcuVVBMT0FEX1NJWkUpDQogICAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgIHJlc29sdmUocmVzKTsNCiAgICAgICAgICB9KTsNCiAgICAgIH0pOw0KICAgIH0sDQogICAgc2F2ZU9yVXBkYXRlVGFsaygpIHsNCiAgICAgIGlmICh0aGlzLnRhbGsuY29udGVudC50cmltKCkgPT0gIiIpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi6K+06K+05YaF5a655LiN6IO95Li656m6Iik7DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgIH0NCiAgICAgIC8vIOi9rOaNouWbvueJhw0KICAgICAgaWYgKHRoaXMudXBsb2FkTGlzdC5sZW5ndGggPiAwKSB7DQogICAgICAgIHZhciBpbWdMaXN0ID0gW107DQogICAgICAgIHRoaXMudXBsb2FkTGlzdC5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgIGltZ0xpc3QucHVzaChpdGVtLnVybCk7DQogICAgICAgIH0pOw0KICAgICAgICB0aGlzLnRhbGsuaW1hZ2VzID0gSlNPTi5zdHJpbmdpZnkoaW1nTGlzdCk7DQogICAgICB9DQogICAgICB0aGlzLmF4aW9zLnBvc3QoIi9hcGkvYWRtaW4vdGFsa3MiLCB0aGlzLnRhbGspLnRoZW4oKHsgZGF0YSB9KSA9PiB7DQogICAgICAgIGlmIChkYXRhLmZsYWcpIHsNCiAgICAgICAgICB0aGlzLiRyZWZzLmVkaXRvci5jbGVhcigpOw0KICAgICAgICAgIHRoaXMudXBsb2FkTGlzdCA9IFtdOw0KICAgICAgICAgIHRoaXMuJG5vdGlmeS5zdWNjZXNzKHsNCiAgICAgICAgICAgIHRpdGxlOiAi5oiQ5YqfIiwNCiAgICAgICAgICAgIG1lc3NhZ2U6IGRhdGEubWVzc2FnZQ0KICAgICAgICAgIH0pOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRoaXMuJG5vdGlmeS5lcnJvcih7DQogICAgICAgICAgICB0aXRsZTogIuWksei0pSIsDQogICAgICAgICAgICBtZXNzYWdlOiBkYXRhLm1lc3NhZ2UNCiAgICAgICAgICB9KTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGRyb3Bkb3duVGl0bGUoKSB7DQogICAgICB2YXIgZGVzYyA9ICIiOw0KICAgICAgdGhpcy5zdGF0dXNMaXN0LmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgIGlmIChpdGVtLnN0YXR1cyA9PSB0aGlzLnRhbGsuc3RhdHVzKSB7DQogICAgICAgICAgZGVzYyA9IGl0ZW0uZGVzYzsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgICByZXR1cm4gZGVzYzsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["Talk.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Talk.vue","sourceRoot":"src/views/talk","sourcesContent":["<template>\r\n  <el-card class=\"main-card\">\r\n    <div class=\"title\">{{ this.$route.name }}</div>\r\n    <div class=\"talk-container\">\r\n      <!-- 输入框 -->\r\n      <Editor\r\n        ref=\"editor\"\r\n        class=\"editor-wrapper\"\r\n        v-model=\"talk.content\"\r\n        placeholder=\"说点什么吧\"\r\n      />\r\n      <!-- 操作菜单 -->\r\n      <div class=\"operation-wrapper\">\r\n        <div class=\"left-wrapper\">\r\n          <!-- 表情 -->\r\n          <el-popover placement=\"bottom-start\" width=\"460\" trigger=\"click\">\r\n            <span\r\n              class=\"emoji-item\"\r\n              v-for=\"(value, key, index) of emojiList\"\r\n              :key=\"index\"\r\n              @click=\"addEmoji(key, value)\"\r\n            >\r\n              <img\r\n                :src=\"value\"\r\n                :title=\"key\"\r\n                class=\"emoji\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n              />\r\n            </span>\r\n            <i\r\n              class=\"iconfont el-icon-mybiaoqing operation-btn\"\r\n              slot=\"reference\"\r\n            />\r\n          </el-popover>\r\n          <!-- 图片上传 -->\r\n          <el-upload\r\n            action=\"/api/admin/talks/images\"\r\n            multiple\r\n            :before-upload=\"beforeUpload\"\r\n            :on-success=\"upload\"\r\n            :show-file-list=\"false\"\r\n          >\r\n            <i class=\"iconfont el-icon-mytupian operation-btn\" />\r\n          </el-upload>\r\n        </div>\r\n        <div class=\"right-wrapper\">\r\n          <!-- 是否置顶 -->\r\n          <el-switch\r\n            style=\"margin-right:16px\"\r\n            v-model=\"talk.isTop\"\r\n            inactive-text=\"置顶\"\r\n            :active-value=\"1\"\r\n            :inactive-value=\"0\"\r\n          />\r\n          <!-- 说说状态 -->\r\n          <el-dropdown\r\n            trigger=\"click\"\r\n            @command=\"handleCommand\"\r\n            style=\"margin-right:16px\"\r\n          >\r\n            <span class=\"talk-status\">\r\n              {{ dropdownTitle }}<i class=\"el-icon-arrow-down el-icon--right\" />\r\n            </span>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item\r\n                v-for=\"(item, index) of statusList\"\r\n                :key=\"index\"\r\n                :command=\"item.status\"\r\n              >\r\n                {{ item.desc }}\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            @click=\"saveOrUpdateTalk\"\r\n            :disabled=\"talk.content == ''\"\r\n          >\r\n            发布\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      <!-- 图片上传 -->\r\n      <el-upload\r\n        class=\"talk-image-upload\"\r\n        v-show=\"uploadList.length > 0\"\r\n        action=\"/api/admin/talks/images\"\r\n        list-type=\"picture-card\"\r\n        :file-list=\"uploadList\"\r\n        multiple\r\n        :before-upload=\"beforeUpload\"\r\n        :on-success=\"upload\"\r\n        :on-remove=\"handleRemove\"\r\n      >\r\n        <i class=\"el-icon-plus\" />\r\n      </el-upload>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport * as imageConversion from \"image-conversion\";\r\nimport EmojiList from \"../../assets/js/emoji\";\r\nimport Editor from \"../../components/Editor.vue\";\r\nexport default {\r\n  components: {\r\n    Editor\r\n  },\r\n  created() {\r\n    if (this.$route.params.talkId) {\r\n      this.axios\r\n        .get(\"/api/admin/talks/\" + this.$route.params.talkId)\r\n        .then(({ data }) => {\r\n          this.talk = data.data;\r\n          if (data.data.imgList) {\r\n            data.data.imgList.forEach(item => {\r\n              this.uploadList.push({ url: item });\r\n            });\r\n          }\r\n        });\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      emojiList: EmojiList,\r\n      talk: {\r\n        id: null,\r\n        content: \"\",\r\n        isTop: 0,\r\n        status: 1,\r\n        images: null\r\n      },\r\n      statusList: [\r\n        { status: 1, desc: \"公开\" },\r\n        { status: 2, desc: \"私密\" }\r\n      ],\r\n      uploadList: []\r\n    };\r\n  },\r\n  methods: {\r\n    handleCommand(command) {\r\n      this.talk.status = command;\r\n    },\r\n    addEmoji(key, value) {\r\n      this.$refs.editor.addText(\r\n        \"<img src= '\" +\r\n          value +\r\n          \"' width='24'height='24' alt=\" +\r\n          key +\r\n          \" style='margin: 0 1px;vertical-align: text-bottom'/>\"\r\n      );\r\n    },\r\n    handleRemove(file) {\r\n      this.uploadList.forEach((item, index) => {\r\n        if (item.url == file.url) {\r\n          this.uploadList.splice(index, 1);\r\n        }\r\n      });\r\n    },\r\n    upload(response) {\r\n      this.uploadList.push({ url: response.data });\r\n    },\r\n    beforeUpload(file) {\r\n      return new Promise(resolve => {\r\n        if (file.size / 1024 < this.config.UPLOAD_SIZE) {\r\n          resolve(file);\r\n        }\r\n        // 压缩到200KB,这里的200就是要压缩的大小,可自定义\r\n        imageConversion\r\n          .compressAccurately(file, this.config.UPLOAD_SIZE)\r\n          .then(res => {\r\n            resolve(res);\r\n          });\r\n      });\r\n    },\r\n    saveOrUpdateTalk() {\r\n      if (this.talk.content.trim() == \"\") {\r\n        this.$message.error(\"说说内容不能为空\");\r\n        return false;\r\n      }\r\n      // 转换图片\r\n      if (this.uploadList.length > 0) {\r\n        var imgList = [];\r\n        this.uploadList.forEach(item => {\r\n          imgList.push(item.url);\r\n        });\r\n        this.talk.images = JSON.stringify(imgList);\r\n      }\r\n      this.axios.post(\"/api/admin/talks\", this.talk).then(({ data }) => {\r\n        if (data.flag) {\r\n          this.$refs.editor.clear();\r\n          this.uploadList = [];\r\n          this.$notify.success({\r\n            title: \"成功\",\r\n            message: data.message\r\n          });\r\n        } else {\r\n          this.$notify.error({\r\n            title: \"失败\",\r\n            message: data.message\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  computed: {\r\n    dropdownTitle() {\r\n      var desc = \"\";\r\n      this.statusList.forEach(item => {\r\n        if (item.status == this.talk.status) {\r\n          desc = item.desc;\r\n        }\r\n      });\r\n      return desc;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.talk-container {\r\n  margin-top: 40px;\r\n}\r\n.editor-wrapper {\r\n  min-height: 150px;\r\n}\r\n.operation-wrapper {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n}\r\n.operation-btn {\r\n  cursor: pointer;\r\n  color: #838383;\r\n  font-size: 20px;\r\n  margin-right: 12px;\r\n}\r\n.talk-status {\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: #999;\r\n}\r\n.emoji {\r\n  user-select: none;\r\n  margin: 0.25rem;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n.emoji-item {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n}\r\n.emoji-item:hover {\r\n  transition: all 0.2s;\r\n  border-radius: 0.25rem;\r\n  background: #dddddd;\r\n}\r\n.left-wrapper {\r\n  display: flex;\r\n  width: 50%;\r\n}\r\n.talk-image-upload {\r\n  margin-top: 8px;\r\n}\r\n</style>\r\n"]}]}