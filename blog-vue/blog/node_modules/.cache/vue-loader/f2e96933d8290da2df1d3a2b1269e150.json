{"remainingRequest":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!B:\\GitCode\\MyBlog\\blog-vue\\blog\\src\\views\\tag\\Tag.vue?vue&type=script&lang=js&","dependencies":[{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\src\\views\\tag\\Tag.vue","mtime":1678087997374},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678087981122},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1678087980232},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678087981122},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1678087994067}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5saXN0VGFncygpOw0KICB9LA0KICBkYXRhOiBmdW5jdGlvbigpIHsNCiAgICByZXR1cm4gew0KICAgICAgdGFnTGlzdDogW10sDQogICAgICBjb3VudDogMA0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBsaXN0VGFncygpIHsNCiAgICAgIHRoaXMuYXhpb3MuZ2V0KCIvYXBpL3RhZ3MiKS50aGVuKCh7IGRhdGEgfSkgPT4gew0KICAgICAgICB0aGlzLnRhZ0xpc3QgPSBkYXRhLmRhdGEucmVjb3JkTGlzdDsNCiAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEuZGF0YS5jb3VudDsNCiAgICAgIH0pOw0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBjb3ZlcigpIHsNCiAgICAgIHZhciBjb3ZlciA9ICIiOw0KICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYmxvZ0luZm8ucGFnZUxpc3QuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgaWYgKGl0ZW0ucGFnZUxhYmVsID09ICJ0YWciKSB7DQogICAgICAgICAgY292ZXIgPSBpdGVtLnBhZ2VDb3ZlcjsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgICByZXR1cm4gImJhY2tncm91bmQ6IHVybCgiICsgY292ZXIgKyAiKSBjZW50ZXIgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0IjsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["Tag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tag.vue","sourceRoot":"src/views/tag","sourcesContent":["<template>\r\n  <div>\r\n    <!-- banner -->\r\n    <div class=\"banner\" :style=\"cover\">\r\n      <h1 class=\"banner-title\">标签</h1>\r\n    </div>\r\n    <!-- 标签列表 -->\r\n    <v-card class=\"blog-container\">\r\n      <div class=\"tag-cloud-title\">标签 - {{ count }}</div>\r\n      <div class=\"tag-cloud\">\r\n        <router-link\r\n          :style=\"{ 'font-size': Math.floor(Math.random() * 10) + 18 + 'px' }\"\r\n          v-for=\"item of tagList\"\r\n          :key=\"item.id\"\r\n          :to=\"'/tags/' + item.id\"\r\n        >\r\n          {{ item.tagName }}\r\n        </router-link>\r\n      </div>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  created() {\r\n    this.listTags();\r\n  },\r\n  data: function() {\r\n    return {\r\n      tagList: [],\r\n      count: 0\r\n    };\r\n  },\r\n  methods: {\r\n    listTags() {\r\n      this.axios.get(\"/api/tags\").then(({ data }) => {\r\n        this.tagList = data.data.recordList;\r\n        this.count = data.data.count;\r\n      });\r\n    }\r\n  },\r\n  computed: {\r\n    cover() {\r\n      var cover = \"\";\r\n      this.$store.state.blogInfo.pageList.forEach(item => {\r\n        if (item.pageLabel == \"tag\") {\r\n          cover = item.pageCover;\r\n        }\r\n      });\r\n      return \"background: url(\" + cover + \") center center / cover no-repeat\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tag-cloud-title {\r\n  line-height: 2;\r\n  font-size: 36px;\r\n  text-align: center;\r\n}\r\n@media (max-width: 759px) {\r\n  .tag-cloud-title {\r\n    font-size: 25px;\r\n  }\r\n}\r\n.tag-cloud {\r\n  text-align: center;\r\n}\r\n.tag-cloud a {\r\n  color: #616161;\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  padding: 0 8px;\r\n  line-height: 2;\r\n  transition: all 0.3s;\r\n}\r\n.tag-cloud a:hover {\r\n  color: #03a9f4 !important;\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n"]}]}