{"remainingRequest":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!B:\\GitCode\\MyBlog\\blog-vue\\blog\\src\\components\\Reply.vue?vue&type=script&lang=js&","dependencies":[{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\src\\components\\Reply.vue","mtime":1678087997341},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678087981122},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1678087980232},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678087981122},{"path":"B:\\GitCode\\MyBlog\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1678087994067}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRW1vamkgZnJvbSAiLi9FbW9qaSI7DQppbXBvcnQgRW1vamlMaXN0IGZyb20gIi4uL2Fzc2V0cy9qcy9lbW9qaSI7DQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBFbW9qaQ0KICB9LA0KICBwcm9wczogew0KICAgIHR5cGU6IHsNCiAgICAgIHR5cGU6IE51bWJlcg0KICAgIH0NCiAgfSwNCiAgZGF0YTogZnVuY3Rpb24oKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGluZGV4OiAwLA0KICAgICAgY2hvb3NlRW1vamk6IGZhbHNlLA0KICAgICAgbmlja25hbWU6ICIiLA0KICAgICAgcmVwbHlVc2VySWQ6IG51bGwsDQogICAgICBwYXJlbnRJZDogbnVsbCwNCiAgICAgIGNvbW1lbnRDb250ZW50OiAiIg0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjYW5jbGVSZXBseSgpIHsNCiAgICAgIHRoaXMuJHJlZnMucmVwbHkuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCiAgICB9LA0KICAgIGluc2VydFJlcGx5KCkgew0KICAgICAgLy/liKTmlq3nmbvlvZUNCiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUudXNlcklkKSB7DQogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmxvZ2luRmxhZyA9IHRydWU7DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgIH0NCiAgICAgIGlmICh0aGlzLmNvbW1lbnRDb250ZW50LnRyaW0oKSA9PSAiIikgew0KICAgICAgICB0aGlzLiR0b2FzdCh7IHR5cGU6ICJlcnJvciIsIG1lc3NhZ2U6ICLlm57lpI3kuI3og73kuLrnqboiIH0pOw0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICB9DQogICAgICAvL+ino+aekOihqOaDhQ0KICAgICAgdmFyIHJlZyA9IC9cWy4rP1xdL2c7DQogICAgICB0aGlzLmNvbW1lbnRDb250ZW50ID0gdGhpcy5jb21tZW50Q29udGVudC5yZXBsYWNlKHJlZywgZnVuY3Rpb24oc3RyKSB7DQogICAgICAgIHJldHVybiAoDQogICAgICAgICAgIjxpbWcgc3JjPSAnIiArDQogICAgICAgICAgRW1vamlMaXN0W3N0cl0gKw0KICAgICAgICAgICInIHdpZHRoPScyNCdoZWlnaHQ9JzI0JyBzdHlsZT0nbWFyZ2luOiAwIDFweDt2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b20nLz4iDQogICAgICAgICk7DQogICAgICB9KTsNCiAgICAgIGNvbnN0IHBhdGggPSB0aGlzLiRyb3V0ZS5wYXRoOw0KICAgICAgY29uc3QgYXJyID0gcGF0aC5zcGxpdCgiLyIpOw0KICAgICAgdmFyIGNvbW1lbnQgPSB7DQogICAgICAgIHR5cGU6IHRoaXMudHlwZSwNCiAgICAgICAgcmVwbHlVc2VySWQ6IHRoaXMucmVwbHlVc2VySWQsDQogICAgICAgIHBhcmVudElkOiB0aGlzLnBhcmVudElkLA0KICAgICAgICBjb21tZW50Q29udGVudDogdGhpcy5jb21tZW50Q29udGVudA0KICAgICAgfTsNCiAgICAgIHN3aXRjaCAodGhpcy50eXBlKSB7DQogICAgICAgIGNhc2UgMToNCiAgICAgICAgY2FzZSAzOg0KICAgICAgICAgIGNvbW1lbnQudG9waWNJZCA9IGFyclsyXTsNCiAgICAgICAgICBicmVhazsNCiAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICBicmVhazsNCiAgICAgIH0NCiAgICAgIHRoaXMuY29tbWVudENvbnRlbnQgPSAiIjsNCiAgICAgIHRoaXMuYXhpb3MucG9zdCgiL2FwaS9jb21tZW50cyIsIGNvbW1lbnQpLnRoZW4oKHsgZGF0YSB9KSA9PiB7DQogICAgICAgIGlmIChkYXRhLmZsYWcpIHsNCiAgICAgICAgICB0aGlzLiRlbWl0KCJyZWxvYWRSZXBseSIsIHRoaXMuaW5kZXgpOw0KICAgICAgICAgIHRoaXMuJHRvYXN0KHsgdHlwZTogInN1Y2Nlc3MiLCBtZXNzYWdlOiAi5Zue5aSN5oiQ5YqfIiB9KTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiR0b2FzdCh7IHR5cGU6ICJlcnJvciIsIG1lc3NhZ2U6IGRhdGEubWVzc2FnZSB9KTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfSwNCiAgICBhZGRFbW9qaSh0ZXh0KSB7DQogICAgICB0aGlzLmNvbW1lbnRDb250ZW50ICs9IHRleHQ7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["Reply.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reply.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"reply-input-wrapper\" style=\"display: none\" ref=\"reply\">\r\n    <textarea\r\n      class=\"comment-textarea\"\r\n      :placeholder=\"'回复 @' + nickname + '：'\"\r\n      auto-grow\r\n      dense\r\n      v-model=\"commentContent\"\r\n    />\r\n    <div class=\"emoji-container\">\r\n      <span\r\n        :class=\"chooseEmoji ? 'emoji-btn-active' : 'emoji-btn'\"\r\n        @click=\"chooseEmoji = !chooseEmoji\"\r\n      >\r\n        <i class=\"iconfont iconbiaoqing\" />\r\n      </span>\r\n      <div style=\"margin-left:auto\">\r\n        <button @click=\"cancleReply\" class=\"cancle-btn v-comment-btn\">\r\n          取消\r\n        </button>\r\n        <button @click=\"insertReply\" class=\"upload-btn v-comment-btn\">\r\n          提交\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!-- 表情框 -->\r\n    <emoji @addEmoji=\"addEmoji\" :chooseEmoji=\"chooseEmoji\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Emoji from \"./Emoji\";\r\nimport EmojiList from \"../assets/js/emoji\";\r\nexport default {\r\n  components: {\r\n    Emoji\r\n  },\r\n  props: {\r\n    type: {\r\n      type: Number\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      index: 0,\r\n      chooseEmoji: false,\r\n      nickname: \"\",\r\n      replyUserId: null,\r\n      parentId: null,\r\n      commentContent: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    cancleReply() {\r\n      this.$refs.reply.style.display = \"none\";\r\n    },\r\n    insertReply() {\r\n      //判断登录\r\n      if (!this.$store.state.userId) {\r\n        this.$store.state.loginFlag = true;\r\n        return false;\r\n      }\r\n      if (this.commentContent.trim() == \"\") {\r\n        this.$toast({ type: \"error\", message: \"回复不能为空\" });\r\n        return false;\r\n      }\r\n      //解析表情\r\n      var reg = /\\[.+?\\]/g;\r\n      this.commentContent = this.commentContent.replace(reg, function(str) {\r\n        return (\r\n          \"<img src= '\" +\r\n          EmojiList[str] +\r\n          \"' width='24'height='24' style='margin: 0 1px;vertical-align: text-bottom'/>\"\r\n        );\r\n      });\r\n      const path = this.$route.path;\r\n      const arr = path.split(\"/\");\r\n      var comment = {\r\n        type: this.type,\r\n        replyUserId: this.replyUserId,\r\n        parentId: this.parentId,\r\n        commentContent: this.commentContent\r\n      };\r\n      switch (this.type) {\r\n        case 1:\r\n        case 3:\r\n          comment.topicId = arr[2];\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.commentContent = \"\";\r\n      this.axios.post(\"/api/comments\", comment).then(({ data }) => {\r\n        if (data.flag) {\r\n          this.$emit(\"reloadReply\", this.index);\r\n          this.$toast({ type: \"success\", message: \"回复成功\" });\r\n        } else {\r\n          this.$toast({ type: \"error\", message: data.message });\r\n        }\r\n      });\r\n    },\r\n    addEmoji(text) {\r\n      this.commentContent += text;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reply-input-wrapper {\r\n  border: 1px solid #90939950;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  margin: 0 0 10px;\r\n}\r\n</style>\r\n"]}]}